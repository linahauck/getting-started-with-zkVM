use host::not_underage;
// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use methods::{OVER18_ID};
// ExecutorEnv is responsible for managing guest-readable memory.
// The host makes the value input available to the guest program before execution by adding input to the executor environment.
use std::sync::Once;

static TRACING_INIT: Once = Once::new();

fn main() {
    // Initialize tracing. In order to view logs, run `RUST_LOG=info cargo run`
    TRACING_INIT.call_once(|| {
        tracing_subscriber::fmt()
            .with_env_filter(tracing_subscriber::filter::EnvFilter::from_default_env())
            .init();
    });

    let (receipt, _) = not_underage(32);

    // The receipt was verified at the end of proving, but the below code is an
    // example of how someone else could verify this receipt.
    receipt
        .verify(OVER18_ID)
        .expect(
        "UNVALID PROOF! Code you have proven should successfully verify; did you specify the correct image ID?",
    );
}
